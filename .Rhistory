head(combined_set_filter)
dim(combined_set)
dim(combined_set_filter)
rm()
?rm
source("run_analysis.R")
?read.table
source("run_analysis.R")
training_set_y <- read.table("./Course3Prj/UCI HAR Dataset/train/y_train.txt", sep="", header=FALSE, col.names = "activityID")
view(training_set_y)
training_set_y
head(training_set_y)
source("run_analysis.R")
View(combined_set_subject)
View(combined_set_subject)
View(combined_set_y)
?cbind
source("run_analysis.R")
head(combined_set_filter)
View(combined_set_filter)
?m,elt
?melt
library(dplyr)
activity_label
?join
head(combined_set_filter)
?setdiff
source("run_analysis.R")
activity_label
test_set_y
test_set_y[,2] = activity_label[test_set_y[,1]]
test_set_y[,1] = activity_label[test_set_y[,1]]
activity_label <- activity_label[,2]
activity_label
test_set_y[,1] = activity_label[test_set_y[,1]]
test_set_y
summary(test_set_y)
summary(combined_set_selected)
summary(combined_set_selected$activityID)
count(combined_set_selected$activityID)
cls(combined_set_selected$activityID)
summary(combined_set_selected$activityID)
activity_label
activity_label <- read.table("./Course3Prj/UCI HAR Dataset/activity_labels.txt", sep="", header=FALSE, col.names = c("activityID","activityName"))
training_set_y[,1] = activity_label$activityName[training_set_y[,1]]
training_set_y
summary(training_set_y)
source("run_analysis.R")
source("run_analysis.R")
combined_set_y[,1] = activity_label$activityName[combined_set_y[,combined_set_y$activityID]]
combined_set_y <- rbind(test_set_y, training_set_y)
combined_set_y[,1] = activity_label$activityName[combined_set_y[,combined_set_y$activityID]]
combined_set_y[,1] = activity_label$activityName[combined_set_y[,1]]
combined_set_y
summary(combined_set_y)
source("run_analysis.R")
View(combined_set_selected)
names(combined_set_selected)
make.names(names(combined_set_selected))
?gsub
names(combined_set_selected) <-gsub("Acc","Acceleration",names(combined_set_selected))
names(combined_set_selected)
names(combined_set_selected) <-gsub("\\(","",names(combined_set_selected))
names(combined_set_selected)
names(combined_set_selected) <-gsub("\\)","",names(combined_set_selected))
names(combined_set_selected)
names(combined_set_selected) <-gsub("mean","Mean",names(combined_set_selected))
names(combined_set_selected)
names(combined_set_selected) <-gsub("Freq","Frequency",names(combined_set_selected))
names(combined_set_selected)
names(combined_set_selected) <-gsub("std","StandardDeviation",names(combined_set_selected))
names(combined_set_selected)
names(combined_set_selected) <-gsub("Mag","Magnitude",names(combined_set_selected))
names(combined_set_selected)
?ddply
names(combined_set_selected) <-gsub("^t","time",names(combined_set_selected))
names(combined_set_selected) <-gsub("^f","Frequency",names(combined_set_selected))
names(combined_set_selected)
library("dplyr", lib.loc="~/R/win-library/3.1")
combined_set_tidy <- aggregate(. ~subjectID + activityID  ,combined_set_selected, mean)
View(combined_set_tidy)
combined_set_tidy <- combined_set_tidy[order(combined_set_tidy$subjectID,combined_set_tidy$activityID),]
combined_set_tidy
View(combined_set_tidy)
write.table(combined_set_tidy, file = "./Course3Prj/tidyData.txt")
source("run_analysis.R")
source(".\Course3Prj/run_analysis.R")
source(".\Course3Prj\run_analysis.R")
source(".\\Course3Prj\\run_analysis.R")
When you click the **Knit** button a document will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this:
source("./Course3Prj/run_analysis.R")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv ","./data/ss06hid.csv")
data <- read.csv("./data/ss06hid.csv")
View(data)
?strsplit
names <- strsplit(names(data),"wgtp")
names[123]
file.download("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv", "./data/GDP.csv")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv", "./data/GDP.csv")
names
names[123]
gdpdata <- read.csv("./data/GDP.csv")
gdpdata
View(dgpdata)
View(gdpdata)
gdpdata <- read.csv("./data/GDP.csv", skip=4, nrows=195)
View(gdpdata)
gdpdata <- read.csv("./data/GDP.csv", skip=4, nrows=190)
class(gdpdata$X.4)
as.numeric(gdpdata$X.4)
gdp <- as.numeric(gdpdata$X.4)
gdp
View(gdp)
View(gdpdata)
gsub(",","",gdpdata$X.4)
as.numeric(gsub(",","",gdpdata$X.4))
gdp <- as.numeric(gsub(",","",gdpdata$X.4))
View(gdp)
mean(gdp)
gdpdata
grep("^United",gdpdata$X.3)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv","./data/FEDSTATS_Country.csv")
cData <- read.csv("./data/FEDSTATS_Country.csv")
View(CData)
View(cData)
summary(cData)
grep("*fiscal*",cData)
grep("*Fiscal*",cData)
names(gdpdata$X.3) <- "CountryCode"
names(gdpdata)
setNames(gdpdata, c("X.4"), c("CountryCode"))
setNames(gdpdata, "X.4", "CountryCode")
gdpdata <- gdpdata[, list(X,X.1, X.3, C.4)]
gdpdata <- gdpdata[, c(1,2,4,5)]
gdpdata
setNames(gdpdata,c("X","X.1","X.3","X.4"), c("CountryCode","rankingGDP","Long.Name","gdp"))
names(gdpdata) <- c("CountryCode","rankingGDP","Long.Name","GDP")
gdpdata
head(gdpdata)
merge_data <- merge(gdpdata,cData,all=TRUE,by=c("CountryCode"))
merge_data
View(merge_data)
isFiscalYearEnd <- grepl("fiscal year end", tolower(merge_data$Special.Notes))
isJune <- grepl("june",tolower(merge_data$Special.Notes))
table(isFiscalYearEnd,isJune)
library(quantmod)
install.packages("quantmod")
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
summary(sampleTimes)
head(sampleTimes)
dim(sampleTimes)
weeday(sampleTimes)
addmargins(table(year(sampleTimes),weekdays(sampleTimes)))
library(lubridate)
addmargins(table(year(sampleTimes),weekdays(sampleTimes)))
View(sampleTimes)
source("./ExData_Plotting1//plot1.R")
source("./ExData_Plotting1//plot1.R")
data <- read.table("./ExData_Plotting1//household_power_consumption.txt")
?mem
?table
?summary
?summarysummary(data)
summary(data)
?read.table()
rm("amzn")
rm(cData)
rm(gdpdata)
rm(merge_data)
data <- read.table("./ExData_Plotting1//household_power_consumption.txt", sep=";", nrows = 50)
summary(data)
data <- read.table("./ExData_Plotting1//household_power_consumption.txt", sep=";", nrows = 50, header=TRUE)
summary(data)
data <- read.table("./ExData_Plotting1/household_power_consumption.txt", sep=";", skip=grep("1/2/2007", readLines("./ExData_Plotting1//household_power_consumption.txt")) , nrows = 50, header=TRUE)
BaseData <- read.table("./ExData_Plotting1/household_power_consumption.txt", sep=";", header=TRUE)
rm(data)
summary(BaseData)
class(BaseData)
class(BaseData$Date)
class(BaseData$Time)
class(BaseData$Sub_metering_1)
BaseData <- read.table("./ExData_Plotting1/household_power_consumption.txt", sep=";", header=TRUE, stringsAsFactors = FALSE)
class(BaseData$Date)
class(BaseData$Time)
colClass
class
class(BaseData)
summary(BaseData)
BaseData <- read.table("./ExData_Plotting1/household_power_consumption.txt", sep=";", header=TRUE, stringsAsFactors = FALSE, na.strings = "?")
summary(BaseData)
head(BaseData$Date)
BaseData$Date <- as.Date(BaseData$Date, format="%d/%m/%Y")
class(BaseData$Date)
SubsetData <- BaseData[BaseData$Date=="2007-02-01" | BaseData$Date == "2007-02-02"]
head(BaseData$Date)
SubsetData <- subset(BaseData, subset = (Date >="2007-02-01" & Date <= "2007-02-02"))
class(SubsetData)
summary(SubsetData)
class(BaseData$Date)
class(BaseData$Time)
class(SubsetData$Date)
class(SubsetData$Time)
date_time <- paste(as.Date(SubsetData$Date), SubsetData$Time)
date_time
SubsetData$DateTime <- as.POSIXct(date_time)
summary(SubsetData)
class(SubsetData$DateTime)
hist(SubsetData$Global_active_power)
?hist
hist(SubsetData$Global_active_power, main = "Global Active Power", xlab = "Global Active Power (kilowatts)", ylab = "Frequency", col = "Red")
hist(SubsetData$Global_active_power, main = "Global Active Power", xlab = "Global Active Power (kilowatts)", ylab = "Frequency", col = "Red", breaks=12)
hist(SubsetData$Global_active_power, main = "Global Active Power", xlab = "Global Active Power (kilowatts)", ylab = "Frequency", col = "Red")
dev.copy(png,file="plot1.png", height=480, width=480)
hist(SubsetData$Global_active_power, main = "Global Active Power", xlab = "Global Active Power (kilowatts)", ylab = "Frequency", col = "Red")
dev.copy(png,file="plot1.png", height=480, width=480)
dev.off()
source("./ExData_Plotting1/plot1.R")
rm(SubsetData)
plot(data$Global_active_power~data$Datetime, type = "l", ylab = "Global Active Power (kilowatts)", xlab = "")
plot(data$Global_active_power~data$DateTime, type = "l", ylab = "Global Active Power (kilowatts)", xlab = "")
source("./ExData_Plotting1/plot2.R")
source("./ExData_Plotting1/plot2.R")
plot(data$Sub_metering_1~data$DateTime, type = "l", ylab = "Global Active Power (kilowatts)", xlab = "")
lines(data$Sub_metering_2~data$DateTime, col="Red")
lines(data$Sub_metering_3~data$DateTime, col="Blue")
?legend
plot(data$Sub_metering_1~data$DateTime, type = "l", ylab = "Global Active Power (kilowatts)", xlab = "")
lines(data$Sub_metering_2~data$DateTime, col="Red")
lines(data$Sub_metering_3~data$DateTime, col="Blue")
legend("topright", col=c("black","red","blue"), lty=1, lwd=2, legend = c("Sub_metering_1","Sub_metering_2","Sub_metering_3"))
?legen
?legend
plot(data$Sub_metering_1~data$DateTime, type = "l", ylab = "Global Active Power (kilowatts)", xlab = "")
lines(data$Sub_metering_2~data$DateTime, col="Red")
lines(data$Sub_metering_3~data$DateTime, col="Blue")
legend("topright", col=c("black","red","blue"), legend = c("Sub_metering_1","Sub_metering_2","Sub_metering_3"))
plot(data$Sub_metering_1~data$DateTime, type = "l", ylab = "Global Active Power (kilowatts)", xlab = "")
lines(data$Sub_metering_2~data$DateTime, col="Red")
lines(data$Sub_metering_3~data$DateTime, col="Blue")
legend("topright", col=c("black","red","blue"), lty=1, lwd=1, legend = c("Sub_metering_1","Sub_metering_2","Sub_metering_3"))
plot(data$Sub_metering_1~data$DateTime, type = "l", ylab = "Global Active Power (kilowatts)", xlab = "")
lines(data$Sub_metering_2~data$DateTime, col="Red")
lines(data$Sub_metering_3~data$DateTime, col="Blue")
legend("topright", col=c("black","red","blue"), lty=1, lwd=2, legend = c("Sub_metering_1","Sub_metering_2","Sub_metering_3"))
source("./ExData_Plotting1/plot3.R")
source("./ExData_Plotting1/plot3.R")
source("./ExData_Plotting1/plot3.R")
par(mfrow = c(2, 2), mar = c(4, 4, 2, 1), oma = c(0, 0, 2, 0))
plot(data$Global_active_power~data$DateTime, type="1", ylab = "Global Active Power (kilowatts)", xlab="")
plot(data$Voltage~data$DateTime, type="1", ylab="Voltage (volt)", xlab="")
plot(data$Sub_metering_1~data$DateTime, type = "l", ylab = "Energy sub metering", xlab = "")
lines(data$Sub_metering_2~data$DateTime, col="Red")
lines(data$Sub_metering_3~data$DateTime, col="Blue")
legend("topright", col=c("black","red","blue"), lty=1, lwd=2, legend = c("Sub_metering_1","Sub_metering_2","Sub_metering_3"))
plot(data$Global_reactive_power~data$DateTime, type="1", ylab="Global Reactive Power (kilowatts)", xlab="")
par(mfrow = c(2, 2), mar = c(4, 4, 2, 1), oma = c(0, 0, 2, 0))
plot(data$Global_active_power~data$DateTime, type="l", ylab = "Global Active Power (kilowatts)", xlab="")
plot(data$Voltage~data$DateTime, type="l", ylab="Voltage (volt)", xlab="")
plot(data$Sub_metering_1~data$DateTime, type = "l", ylab = "Energy sub metering", xlab = "")
lines(data$Sub_metering_2~data$DateTime, col="Red")
lines(data$Sub_metering_3~data$DateTime, col="Blue")
legend("topright", col=c("black","red","blue"), lty=1, lwd=2, legend = c("Sub_metering_1","Sub_metering_2","Sub_metering_3"))
plot(data$Global_reactive_power~data$DateTime, type="l", ylab="Global Reactive Power (kilowatts)", xlab="")
par(mfrow = c(2, 2), mar = c(4, 4, 2, 1), oma = c(0, 0, 2, 0))
plot(data$Global_active_power~data$DateTime, type="l", ylab = "Global Active Power", xlab="")
plot(data$Voltage~data$DateTime, type="l", ylab="Voltage", xlab="")
plot(data$Sub_metering_1~data$DateTime, type = "l", ylab = "Energy sub metering", xlab = "")
lines(data$Sub_metering_2~data$DateTime, col="Red")
lines(data$Sub_metering_3~data$DateTime, col="Blue")
legend("topright", col=c("black","red","blue"), bty="n", lty=1, lwd=2, legend = c("Sub_metering_1","Sub_metering_2","Sub_metering_3"))
plot(data$Global_reactive_power~data$DateTime, type="l", ylab="Global_reactive_power", xlab="")
source("./ExData_Plotting1/plot4.R")
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
?Diet
?BodyWeight
library(lattice)
library(datasets)
data(airquality)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
print(p)
library(datasets)
data(airquality)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
load(ggplot2)
install.packages(ggplot2)
library(ggplot2)
install.packages(ggplot2)
install.packages("ggplot2")
library(ggplot2)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
library(ggplot2)
g <- ggplot(movies, aes(votes, rating))
print(g)
qplot(votes, rating, data = movies)
if(require(ggplot2)==F){ install.packages("ggplot2") } library(ggplot2)
if(require(ggplot2)==F){ install.packages("ggplot2") } library(ggplot2)
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
library(ggplot2)
ggplot(mpg, aes(x=hwy)) + geom_density(fill="steelblue")
ggplot(mpg, aes(x=hwy,y=cty)) + geom_point(aes(size=cyl),colour="red") + scale_size(name="No. of\nCylinders", range=c(2,6)) + xlab("Highway miles/gallon") + ylab("City miles/gallon") + facet_wrap(~class) + theme(axis.text = element_text(size=15, colour="black"), axis.title = element_text(size=20), strip.text.x = element_text(size=15), legend.title = element_text(size=15))
?mpg
ggplot(mpg, aes(x=hwy,y=cty)) + geom_point(aes(size=cyl),colour="red") + scale_size(name="No. of\nCylinders", range=c(2,6)) + xlab("Highway miles/gallon") + ylab("City miles/gallon") + facet_wrap(~drv) + theme(axis.text = element_text(size=15, colour="black"), axis.title = element_text(size=20), strip.text.x = element_text(size=15), legend.title = element_text(size=15))
ggplot(mpg, aes(x=hwy,y=cty)) + geom_point(aes(size=cyl),colour="red") + scale_size(name="No. of\nCylinders", range=c(2,6)) + xlab("Highway miles/gallon") + ylab("City miles/gallon") + facet_wrap(~cyl) + theme(axis.text = element_text(size=15, colour="black"), axis.title = element_text(size=20), strip.text.x = element_text(size=15), legend.title = element_text(size=15))
ggplot(mpg, aes(x=hwy,y=cty)) + geom_point(aes(size=cyl),colour="red") + scale_size(name="No. of\nCylinders", range=c(2,6)) + xlab("Highway miles/gallon") + ylab("City miles/gallon") + facet_wrap(~year) + theme(axis.text = element_text(size=15, colour="black"), axis.title = element_text(size=20), strip.text.x = element_text(size=15), legend.title = element_text(size=15))
ggplot(mpg, aes(x=hwy,y=cty)) + geom_point(aes(size=cyl),colour="red") + scale_size(name="No. of\nCylinders", range=c(2,6)) + xlab("Highway miles/gallon") + ylab("City miles/gallon") + facet_wrap(~model) + theme(axis.text = element_text(size=15, colour="black"), axis.title = element_text(size=20), strip.text.x = element_text(size=15), legend.title = element_text(size=15))
ggplot(mpg, aes(x=hwy,y=cty)) + geom_point(aes(size=cyl),colour="red") + scale_size(name="No. of\nCylinders", range=c(2,6)) + xlab("Highway miles/gallon") + ylab("City miles/gallon") + facet_wrap(~manufacturer) + theme(axis.text = element_text(size=15, colour="black"), axis.title = element_text(size=20), strip.text.x = element_text(size=15), legend.title = element_text(size=15))
?mtcars
str(mtcars)
dim(mtcars)
head(mtcars)
mtcars
dist1 <- dist(mtcars) hclust_model <- hclust(dist1) plot(hclust_model)
dist1 <- dist(mtcars)
hclust_model <- hclust(dist1)
plot(hclust_model)
rect.hclust(hclust_model, k=3, border="red")
source("./ExData_Plotting1/plot1.R")
data <- read.table("./ExData_Plotting1/household_power_consumption.txt", sep=";", header=TRUE, na.strings = c("?"))
dtf <- data[which(as.Date(data$Date) >= as.Date("02/01/2007") & as.Date(data$Date) <= as.Date("02/02/2007")),]
# -----------Create PNG file-------------------
png(file="ExData_Plotting1/plot1.png",width=480,height=480,bg="white")
with(dtf, hist(Global_active_power, col="red", main="Global Active Power",bg="white", xlab="Global Active Power (kilowatts)"))
dev.off()
rm(data)
rm(dtf)
data <- read.csv("./ACT/d_Property.csv")
str(data)
summary(data)
if (!file.exists("./RepData_PeerAssessment1/activity.zip")){
print("File not there, proceed to download")
download.file("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip", destfile="./RepData_PeerAssessment1/activity.zip", mode="wb")
}
}
if (!file.exists("./RepData_PeerAssessment1/activity.zip")){
print("File not there, proceed to download")
download.file("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip", destfile="./RepData_PeerAssessment1/activity.zip", mode="wb")
}
if (!file.exists("./RepData_PeerAssessment1/activity.csv")){
print("Extracted file not found, proceed with unzip")
unzip("./RepData_PeerAssessment1/activity.zip", exdir="./RepData_PeerAssessment1")
}
if (!file.exists("./RepData_PeerAssessment1/activity.zip")){
print("File not there, proceed to download")
download.file("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip", destfile="./RepData_PeerAssessment1/activity.zip")
}
if (!file.exists("./RepData_PeerAssessment1/activity.csv")){
print("Extracted file not found, proceed with unzip")
unzip("./RepData_PeerAssessment1/activity.zip", exdir="./RepData_PeerAssessment1")
}
library(knits)
install.packages(knits)
install.packages(knitr)
install.packages("knitr"")
a
bye
stop
""
library(knitr)
getwd()
print("File Not unzip, proceed to unzip.")
if (!file.exists("./RepData_PeerAssessment1/activity.zip")){
print("File Not Exist, proceed to download.")
url <- "http://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
download.file( url, destfile="./RepData_PeerAssessment1/activity.zip")
}
getwd()
setwd("./RepData_PeerAssessment1/")
data <- read.csv("activity.csv")
str(data)
summary(data)
head(data)
dates <- strptime(data$date, "%Y-%m-%d")
summary(dates)
data$date <- dates
data
summary(data)
str(data)
totalSteps <- aggregate(data, by = data$date, FUN=sum, na.rm=TRUE)
data2 <- read.csv("activity.csv")
data2$Date <- as.Date(data2$Date, format = "%Y-%m-%d")
data2$Date <- as.Date(data2$Date, format = "%Y-%M-%D")
str(data)
str(data)
dataSum <- sapply(data, sum, na.rm=TRUE)
dataSum <- sapply(data$steps, data$Date, sum, na.rm=TRUE)
dataSum <- aggregate(data$steps ~ data$Date, data = data, sum )
dataSum <- aggregate(data$steps ~ data$Date, data = data, sum, exclude = "NA" )
dataSum <- aggregate(data$steps ~ data$Date, data = data, sum, exclude = "")
dataSum <- aggregate(data$steps ~ data$Date, data = data, sum, exclude = NULL)
summary(data)
totalSum <- tapply(data$steps, data$date, sum, na.rm=TRUE)
totalSum <- sapply(data$steps, data$date, sum, na.rm=TRUE)
totalSum <- aggregate(steps ~ date, data = data, sum)
totalSum <- aggregate(steps ~ date, data = data2, sum)
totalSum
data <- read.csv("activity.csv")
totalSum <- aggregate(steps ~ date, data = data, sum)
library(ggplot2)
ggplot(totalSum, aes(x=steps, y=date))
ggplot(totalSum, aes(x=steps, y=date)) + geom_histogram()
ggplot(totalSum, aes(x=date, y=steps)) + geom_histogram()
ggplot(totalSum, aes(steps)) + geom_histogram()
ggplot(totalSum, aes(steps)) + geom_histogram(breaks = c(0,5000,10000,15000,20000,25000))
ggplot(totalSum, aes(steps)) + geom_histogram(breaks = c(0,5000,10000,15000,20000,25000) + xlab = "xlab" + ylab = "ylab" + main = "Main")
ggplot(totalSum, aes(steps)) + geom_histogram(breaks = c(0,5000,10000,15000,20000,25000), xlab = "xlab", ylab = "ylab")
ggplot(totalSum, aes(steps)) + geom_histogram(breaks = c(0,5000,10000,15000,20000,25000))
ggplot(totalSum, aes(steps)) + geom_histogram(breaks = c(0,5000,10000,15000,20000,25000)) + xlab("steps") + ylab("Frequency") + title("Distribution of Total numbers of steps taken per day")
ggplot(totalSum, aes(steps)) + geom_histogram(breaks = c(0,5000,10000,15000,20000,25000)) + xlab("steps") + ylab("Frequency") + ggtitle("Distribution of Total numbers of steps taken per day")
ggplot(totalSum, aes(steps)) + geom_histogram(breaks = c(0,5000,10000,15000,20000,25000)) + xlab("Steps") + ylab("Frequency") + ggtitle("Total numbers of steps taken each day")
ggplot(totalSum, aes(steps ~ date)) + geom_histogram()
rm(data2)
mean(totalSum)
mean(totalSum,na.rm = TRUE)
mean(totalSum$steps,na.rm = TRUE)
median(totalSum$steps,na.rm=TRUE)
meanData <- mean(totalSum$steps,na.rm = TRUE)
medianData <- median(totalSum$steps,na.rm=TRUE)
TotalAvg <- aggregate(steps ~ date + interval, data, mean)
head(TotalAvg)
TotalAvg <- aggregate(steps ~ interval, data, mean)
TotalAvg
ggplot(TotalAvg, aes(interval)) + geom_point
ggplot(TotalAvg, aes(interval)) + geom_line()
ggplot(TotalAvg, aes(interval,steps)) + geom_line()
ggplot(TotalAvg, aes(interval,steps)) + geom_line() + ggtitle("Time Series Plot of 5-minute interval and average number os steps taken across all days")
TotalAvg[TotalAvg$steps == max(TotalAvg$steps),]
str(data)
summary(data)
data$steps[grepl(x=data, pattern = NA),]
nrow(data[is.na(data$steps),])
dataNew <- data
summary(dataNew)
data2 <- read.csv("activity.csv")
summary(data2)
dataNewNew <- replace(x = dataNew$steps, is.na(dataNew$steps), mean(dataNew$steps, na.rm=TRUE))
dataNewNew
summary(dataNewNew)
dataNewNew <- replace(x = dataNew, is.na(dataNew$steps), mean(dataNew$steps, na.rm=TRUE))
dataNewNew <- replace(x = dataNew$steps, is.na(dataNew$steps), mean(dataNew$steps, na.rm=TRUE))
str(dataNew)
dataNewNew <- dataNew
dataNewNew[is.na(dataNewNew$steps)] <- mean(dataNewNew$steps, na.rm=TRUE)
dataNewNew[is.na(dataNewNew$steps),] <- mean(dataNewNew$steps, na.rm=TRUE)
dataNewNew[is.na(dataNewNew$steps)] <- mean(dataNewNew$steps, na.rm=TRUE)
str(dataNewNew)
summary(dataNewNew)
summary(dataNew)
summary(data$date)
str(data$date)
data$date
dim(data$date)
dim(data)
dataNew <- data
dataNewNew <- data
rm(DataNew)
rm(dataNewNew)
rm(data2)
round(mean(dataNewNew$steps, na.rm=TRUE))
dataNew$steps[is.na(dataNew$steps)]
mean(dataNew$steps)
mean(dataNew$steps, is.na=TRUE)
mean(dataNew$steps, is.na=FALSE)
mean(dataNew$steps, is.na=TRUE)
TotalAvg
mean(TotalAvg$steps)
mean(TotalAvg$steps, is.na=TRUE)
dataNew$steps[is.na(dataNew$steps)] <- mean(TotalAvg$steps)
summary(dataNew)
head(dataNew$date)
dataNew$date[1,1]
dataNew$date[1,]
dataNew$date[1]
weekdays(dataNew$date[1])
weekdays(as.Date(dataNew$date[1])
)
dataNewWeek <- dataNew
str(dataNewWeeK)
str(dataNewWeek)
dataNewWeek$dayType <- "Blank"
str(dataNewWeek)
dataNewWeek$dayType <- weekday(as.Date(dataNewWeek$date))
dataNewWeek$dayType <- weekdays(as.Date(dataNewWeek$date))
str(dataNewWeek)
summary(dataNewWeek)
summary(dataNewWeek$dayType)
head(dataNewWeek$dayType,10)
head(dataNewWeek$dayType,100)
dataNewWeek$dayType <- "Weekday"
weekend <- weekdays(as.Date(dataNewWeek$date)) %in% c("Saturday","Sunday")
dataNewWeek$dayType[weekend == TRUE] <- "weekend]"
str(dataNewWeek)
dataNewWeek$dayType <- as.factor(dataNewWeek$dayType)
str(dataNewWeek)
summary(dataNewWeek)
TotalAvgNewWeek <- aggregate(steps ~ interval | dayType, dataNewWeek, mean)
TotalAvgNewWeek <- aggregate(steps ~ interval + dayType, dataNewWeek, mean)
ggplot(TotalAvgNewWeek, aes(x=interval,y=steps,group=dayType)) +
geom_line() +
facet_wrap(~ dayType, nrow=2) +
ggtitle("Time Series Plot of 5-minute interval and average number of steps taken across all days")
ggplot(TotalAvgNewWeek, aes(x=interval,y=steps,group=dayType)) +
geom_line(aes(color=dayType)) +
facet_wrap(~ dayType, nrow=2) +
ggtitle("Time Series Plot of 5-minute interval and average number of steps taken across all days (group by Weekday/Weekend)")
